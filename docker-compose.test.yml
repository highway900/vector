version: '3'

services:
  build-x86_64:
    build:
      context: scripts
      dockerfile: ci-docker-images/builder-x86_64-unknown-linux-musl/Dockerfile
    environment:
      CARGO_TERM_COLOR: always
    volumes:
      - $PWD:$PWD
      - ./target/cargo/registry:/opt/rust/cargo/registry
      - ./target/cargo/git:/opt/rust/cargo/git
    working_dir: $PWD
    user: $USER
    command: cargo build --no-default-features --features default-musl --target x86_64-unknown-linux-musl

  build-armv7:
    build:
      context: scripts
      dockerfile: ci-docker-images/builder-armv7-unknown-linux-musleabihf/Dockerfile
    environment:
      CARGO_TERM_COLOR: always
    volumes:
      - $PWD:$PWD
      - ./target/cargo/registry:/opt/rust/cargo/registry
      - ./target/cargo/git:/opt/rust/cargo/git
    working_dir: $PWD
    user: $USER
    command: cargo build --no-default-features --features default-musl --target armv7-unknown-linux-musleabihf

  build-aarch64:
    build:
      context: scripts
      dockerfile: ci-docker-images/builder-aarch64-unknown-linux-musl/Dockerfile
    environment:
      CARGO_TERM_COLOR: always
    volumes:
      - $PWD:$PWD
      - ./target/cargo/registry:/opt/rust/cargo/registry
      - ./target/cargo/git:/opt/rust/cargo/git
    working_dir: $PWD
    user: $USER
    command: cargo build --no-default-features --features default-musl --target aarch64-unknown-linux-musl

  test-x86_64:
    build:
      context: scripts
      dockerfile: ci-docker-images/builder-x86_64-unknown-linux-musl/Dockerfile
    environment:
      CARGO_TERM_COLOR: always
    volumes:
      - $PWD:$PWD
      - ./target/cargo/registry:/opt/rust/cargo/registry
      - ./target/cargo/git:/opt/rust/cargo/git
    working_dir: $PWD
    user: $USER
    command: cargo test --no-default-features --features default-musl --target x86_64-unknown-linux-musl

  test-armv7:
    build:
      context: scripts
      dockerfile: ci-docker-images/builder-armv7-unknown-linux-musleabihf/Dockerfile
    environment:
      CARGO_TERM_COLOR: always
    volumes:
      - $PWD:$PWD
      - ./target/cargo/registry:/opt/rust/cargo/registry
      - ./target/cargo/git:/opt/rust/cargo/git
    working_dir: $PWD
    user: $USER
    command: cargo test --no-default-features --features default-musl --target armv7-unknown-linux-musleabihf

  test-aarch64:
    build:
      context: scripts
      dockerfile: ci-docker-images/builder-aarch64-unknown-linux-musl/Dockerfile
    environment:
      CARGO_TERM_COLOR: always
    volumes:
      - $PWD:$PWD
      - ./target/cargo/registry:/opt/rust/cargo/registry
      - ./target/cargo/git:/opt/rust/cargo/git
    working_dir: $PWD
    user: $USER
    command: cargo test --no-default-features --features default-musl --target aarch64-unknown-linux-musl

  test-x86_64:
    build:
      context: scripts
      dockerfile: ci-docker-images/builder-x86_64-unknown-linux-musl/Dockerfile
    environment:
      CARGO_TERM_COLOR: always
    volumes:
      - $PWD:$PWD
      - ./target/cargo/registry:/opt/rust/cargo/registry
      - ./target/cargo/git:/opt/rust/cargo/git
    working_dir: $PWD
    user: $USER
    command: cargo test --no-default-features --features default-musl --target x86_64-unknown-linux-musl

  check-code:
    build:
      context: scripts
      dockerfile: ci-docker-images/checker/Dockerfile
    environment:
      RUSTFLAGS: "-D warnings"
    volumes:
      - $PWD:$PWD
      - ./target/cargo/registry:/root/.cargo/registry
      - ./target/cargo/git:/root/.cargo/git
    working_dir: $PWD
    user: root
    command: cargo check --all --all-targets

  check-fmt:
    build:
      context: scripts
      dockerfile: ci-docker-images/checker/Dockerfile
    volumes:
      - $PWD:$PWD
      - ./target/cargo/registry:/root/.cargo/registry
      - ./target/cargo/git:/root/.cargo/git
    working_dir: $PWD
    user: root
    command: cargo fmt -- --check

  check-style:
    build:
      context: scripts
      dockerfile: ci-docker-images/checker/Dockerfile
    volumes:
      - $PWD:$PWD
    working_dir: $PWD
    user: $USER
    command: ./scripts/check-style.sh

  check-generate:
    build:
      context: scripts
      dockerfile: ci-docker-images/checker/Dockerfile
    volumes:
      - $PWD:$PWD
    working_dir: $PWD
    user: $USER
    command: ./scripts/check-generate.sh

  check-version:
    build:
      context: scripts
      dockerfile: ci-docker-images/checker/Dockerfile
    volumes:
      - $PWD:$PWD
    working_dir: $PWD
    user: $USER
    command: ./scripts/check-version.rb

  check-examples:
    image: ubuntu:18.04
    volumes:
      - $PWD:$PWD
    working_dir: $PWD
    user: $USER
    command: ["sh", "-ec", "./target/x86_64-unknown-linux-musl/release/vector validate --topology --deny-warnings ./config/examples/*.toml"]

  check-blog:
    build:
      context: scripts
      dockerfile: ci-docker-images/checker/Dockerfile
    volumes:
      - $PWD:$PWD
    working_dir: $PWD
    user: $USER
    command: ./scripts/check-blog-signatures.rb

  build-archive:
    build:
      context: scripts
      dockerfile: ci-docker-images/builder-x86_64-unknown-linux-musl/Dockerfile
    environment:
      TARGET: x86_64-unknown-linux-musl
      FEATURES: default-musl
      CARGO_TERM_COLOR: always
    volumes:
      - $PWD:$PWD
      - ./target/cargo/registry:/opt/rust/cargo/registry
      - ./target/cargo/git:/opt/rust/cargo/git
    working_dir: $PWD
    user: $USER
    command: make build-archive

  package-deb:
    build:
      context: scripts
      dockerfile: ci-docker-images/builder-x86_64-unknown-linux-musl/Dockerfile
    environment:
      TARGET: x86_64-unknown-linux-musl
    volumes:
      - $PWD:$PWD
      - ./target/cargo/registry:/opt/rust/cargo/registry
      - ./target/cargo/git:/opt/rust/cargo/git
    working_dir: $PWD
    command: make package-deb

  package-rpm:
    build:
      context: scripts
      dockerfile: ci-docker-images/packager-rpm/Dockerfile
    environment:
      TARGET: x86_64-unknown-linux-musl
    volumes:
      - $PWD:$PWD
    working_dir: $PWD
    command: make package-rpm

  verify-rpm-amazonlinux-1:
    build:
      context: scripts
      dockerfile: ci-docker-images/verifier-amazonlinux-1/Dockerfile
    volumes:
      - $PWD:$PWD
    working_dir: $PWD
    command: ["sh", "-ec", "rpm -i target/artifacts/*-x86_64.rpm && vector --version"]

  verify-rpm-amazonlinux-2:
    build:
      context: scripts
      dockerfile: ci-docker-images/verifier-amazonlinux-2/Dockerfile
    volumes:
      - $PWD:$PWD
    working_dir: $PWD
    command: ["sh", "-ec", "rpm -i target/artifacts/*-x86_64.rpm && vector --version"]

  verify-rpm-centos-7:
    build:
      context: scripts
      dockerfile: ci-docker-images/verifier-centos-7/Dockerfile
    volumes:
      - $PWD:$PWD
    working_dir: $PWD
    command: ["sh", "-ec", "rpm -i target/artifacts/*-x86_64.rpm && vector --version"]

  verify-deb-artifact-on-deb-8:
    build:
      context: scripts
      dockerfile: ci-docker-images/verifier-deb-8/Dockerfile
    volumes:
      - $PWD:$PWD
    working_dir: $PWD
    command: ["sh", "-ec", "dpkg -i target/artifacts/*-amd64.deb && vector --version"]

  verify-deb-artifact-on-deb-9:
    build:
      context: scripts
      dockerfile: ci-docker-images/verifier-deb-9/Dockerfile
    volumes:
      - $PWD:$PWD
    working_dir: $PWD
    command: ["sh", "-ec", "dpkg -i target/artifacts/*-amd64.deb && vector --version"]

  verify-deb-artifact-on-deb-10:
    build:
      context: scripts
      dockerfile: ci-docker-images/verifier-deb-10/Dockerfile
    volumes:
      - $PWD:$PWD
    working_dir: $PWD
    command: ["sh", "-ec", "dpkg -i target/artifacts/*-amd64.deb && vector --version"]

  verify-deb-artifact-on-ubuntu-16-04:
    build:
      context: scripts
      dockerfile: ci-docker-images/verifier-ubuntu-16-04/Dockerfile
    volumes:
      - $PWD:$PWD
    working_dir: $PWD
    command: ["sh", "-ec", "dpkg -i target/artifacts/*-amd64.deb && vector --version"]

  verify-deb-artifact-on-ubuntu-18-04:
    build:
      context: scripts
      dockerfile: ci-docker-images/verifier-ubuntu-18-04/Dockerfile
    volumes:
      - $PWD:$PWD
    working_dir: $PWD
    command: ["sh", "-ec", "dpkg -i target/artifacts/*-amd64.deb && vector --version"]

  verify-deb-artifact-on-ubuntu-19-04:
    build:
      context: scripts
      dockerfile: ci-docker-images/verifier-ubuntu-19-04/Dockerfile
    volumes:
      - $PWD:$PWD
    working_dir: $PWD
    command: ["sh", "-ec", "dpkg -i target/artifacts/*-amd64.deb && vector --version"]

  verify-nixos:
    build:
      context: scripts
      dockerfile: ci-docker-images/verifier-nixos/Dockerfile
    volumes:
      - $PWD:$PWD
    working_dir: $PWD
    command: ["sh", "-ec", "./scripts/verify-nix.sh && vector --version"]

  target-graph:
    build:
      context: scripts
      dockerfile: ci-docker-images/target-graph/Dockerfile
    volumes:
      - $PWD:$PWD
    working_dir: $PWD

  clean:
    image: ubuntu:18.04
    volumes:
      - $PWD:$PWD
    working_dir: $PWD
    command: ["sh", "-ec", "rm -rf target"]

  init-target-dir:
    image: ubuntu:18.04
    volumes:
      - $PWD:$PWD
    working_dir: $PWD
    user: $USER
    command: ["sh", "-ec", "mkdir -p target/cargo/registry target/cargo/git"]

  load-qemu-binfmt:
    build:
      context: scripts
      dockerfile: ci-docker-images/loader-qemu-binfmt/Dockerfile
    user: root
    privileged: true
    command: dpkg-reconfigure qemu-user-binfmt
