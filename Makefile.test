RUN=./scripts/docker-compose-run.sh

# default target

all: check verify

# checks

check: check-code check-fmt check-style check-generate check-blog check-version check-examples

check-code: init-target-dir
	$(RUN) check-code

check-fmt: init-target-dir
	$(RUN) check-fmt

check-style:
	$(RUN) check-style

check-generate:
	$(RUN) check-generate

check-version:
	$(RUN) check-version

check-examples: build-archive
	$(RUN) check-examples

check-blog:
	$(RUN) check-blog

# packaging

build-archive: init-target-dir
	$(RUN) build-archive

package-deb: build-archive
	$(RUN) package-deb

package-rpm: build-archive
	$(RUN) package-rpm

# verifications
verify: verify-rpm verify-deb verify-nixos

# verify RPM packages
verify-rpm: verify-rpm-amazonlinux-1 verify-rpm-amazonlinux-2 verify-rpm-centos-7

verify-rpm-amazonlinux-1: package-rpm
	$(RUN) verify-rpm-amazonlinux-1

verify-rpm-amazonlinux-2: package-rpm
	$(RUN) verify-rpm-amazonlinux-2

verify-rpm-centos-7: package-rpm
	$(RUN) verify-rpm-centos-7

# verify DEB packages
verify-deb: verify-deb-artifact-on-deb-8 verify-deb-artifact-on-deb-9 verify-deb-artifact-on-deb-10 verify-deb-artifact-on-ubuntu-16-04 verify-deb-artifact-on-ubuntu-18-04 verify-deb-artifact-on-ubuntu-19-04

verify-deb-artifact-on-deb-8: package-deb
	$(RUN) verify-deb-artifact-on-deb-8

verify-deb-artifact-on-deb-9: package-deb
	$(RUN) verify-deb-artifact-on-deb-9

verify-deb-artifact-on-deb-10: package-deb
	$(RUN) verify-deb-artifact-on-deb-10

verify-deb-artifact-on-ubuntu-16-04: package-deb
	$(RUN) verify-deb-artifact-on-ubuntu-16-04

verify-deb-artifact-on-ubuntu-18-04: package-deb
	$(RUN) verify-deb-artifact-on-ubuntu-18-04

verify-deb-artifact-on-ubuntu-19-04: package-deb
	$(RUN) verify-deb-artifact-on-ubuntu-19-04

# verify that Vector can be built on NixOS
verify-nixos:
	$(RUN) verify-nixos

# misc

# display dependencies between all targets in this Makefile
target-graph:
	@docker-compose -f docker-compose.test.yml run --rm target-graph $(TARGET)

# clean everything
clean:
	$(RUN) clean

# create target directory with correct permissions
init-target-dir:
	$(RUN) init-target-dir
